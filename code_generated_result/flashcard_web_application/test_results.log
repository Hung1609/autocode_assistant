============================= test session starts =============================
platform win32 -- Python 3.10.10, pytest-8.3.5, pluggy-1.6.0 -- C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, mock-3.14.1
asyncio: mode=auto, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collecting ... collected 47 items

tests/test_CustomJsonFormatter_format.py::test_CustomJsonFormatter_format_success PASSED [  2%]
tests/test_CustomJsonFormatter_format.py::test_CustomJsonFormatter_format_with_request_id PASSED [  4%]
tests/test_CustomJsonFormatter_format.py::test_CustomJsonFormatter_format_with_exception FAILED [  6%]
tests/test_CustomJsonFormatter_format.py::test_CustomJsonFormatter_format_empty_message PASSED [  8%]
tests/test_CustomJsonFormatter_format.py::test_CustomJsonFormatter_format_long_message PASSED [ 10%]
tests/test_RequestIDFilter_filter.py::test_RequestIDFilter_filter_success FAILED [ 12%]
tests/test_RequestIDFilter_filter.py::test_RequestIDFilter_filter_no_request_id FAILED [ 14%]
tests/test_RequestIDMiddleware_dispatch.py::test_RequestIDMiddleware_dispatch_success FAILED [ 17%]
tests/test_RequestIDMiddleware_dispatch.py::test_RequestIDMiddleware_dispatch_exception FAILED [ 19%]
tests/test_create_db_and_tables.py::test_create_db_and_tables_success PASSED [ 21%]
tests/test_create_db_and_tables.py::test_create_db_and_tables_exception PASSED [ 23%]
tests/test_create_flashcard.py::test_create_flashcard_success PASSED     [ 25%]
tests/test_create_flashcard.py::test_create_flashcard_db_error PASSED    [ 27%]
tests/test_create_flashcard.py::test_create_flashcard_empty_front_text FAILED [ 29%]
tests/test_create_flashcard.py::test_create_flashcard_empty_back_text FAILED [ 31%]
tests/test_create_review.py::test_create_review_success FAILED           [ 34%]
tests/test_create_review.py::test_create_review_db_error FAILED          [ 36%]
tests/test_create_review.py::test_create_review_invalid_input FAILED     [ 38%]
tests/test_get_db.py::test_get_db_success PASSED                         [ 40%]
tests/test_health_check.py::test_health_check_success PASSED             [ 42%]
tests/test_integration.py::test_create_flashcard_success FAILED          [ 44%]
tests/test_integration.py::test_create_flashcard_missing_front_text FAILED [ 46%]
tests/test_integration.py::test_create_flashcard_missing_back_text FAILED [ 48%]
tests/test_integration.py::test_get_flashcards_empty FAILED              [ 51%]
tests/test_integration.py::test_get_flashcards_with_data FAILED          [ 53%]
tests/test_integration.py::test_get_flashcards_with_query FAILED         [ 55%]
tests/test_integration.py::test_get_flashcard_by_id_success FAILED       [ 57%]
tests/test_integration.py::test_get_flashcard_by_id_not_found PASSED     [ 59%]
tests/test_integration.py::test_create_review_success FAILED             [ 61%]
tests/test_integration.py::test_create_review_invalid_flashcard_id FAILED [ 63%]
tests/test_integration.py::test_create_review_missing_flashcard_id FAILED [ 65%]
tests/test_integration.py::test_create_review_missing_correct FAILED     [ 68%]
tests/test_integration.py::test_get_statistics_success FAILED            [ 70%]
tests/test_log_requests.py::test_log_requests_success PASSED             [ 72%]
tests/test_log_requests.py::test_log_requests_post_request PASSED        [ 74%]
tests/test_log_requests.py::test_log_requests_exception PASSED           [ 76%]
tests/test_read_flashcard.py::test_read_flashcard_success FAILED         [ 78%]
tests/test_read_flashcard.py::test_read_flashcard_not_found FAILED       [ 80%]
tests/test_read_flashcard.py::test_read_flashcard_database_error PASSED  [ 82%]
tests/test_read_flashcard.py::test_read_flashcard_http_exception_raised PASSED [ 85%]
tests/test_read_flashcards.py::test_read_flashcards_no_query_success PASSED [ 87%]
tests/test_read_flashcards.py::test_read_flashcards_with_query_success PASSED [ 89%]
tests/test_read_flashcards.py::test_read_flashcards_db_error PASSED      [ 91%]
tests/test_read_flashcards.py::test_read_flashcards_with_empty_query_success FAILED [ 93%]
tests/test_setup_logging.py::test_setup_logging_success PASSED           [ 95%]
tests/test_setup_logging.py::test_setup_logging_log_dir_exists PASSED    [ 97%]
tests/test_setup_logging.py::test_setup_logging_json_logger_available FAILED [100%]

================================== FAILURES ===================================
_______________ test_CustomJsonFormatter_format_with_exception ________________
tests\test_CustomJsonFormatter_format.py:74: in test_CustomJsonFormatter_format_with_exception
    formatted_log = formatter.format(record)
backend\main.py:38: in format
    log_record['exc_info'] = self.formatException(record.exc_info)
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\logging\__init__.py:632: in formatException
    tb = ei[2]
E   TypeError: 'bool' object is not subscriptable
_____________________ test_RequestIDFilter_filter_success _____________________
tests\test_RequestIDFilter_filter.py:13: in test_RequestIDFilter_filter_success
    result = request_id_filter.filter(record)
backend\main.py:49: in filter
    record.request_id = request_id_ctx.get()
E   LookupError: <ContextVar name='request_id' at 0x00000248B255D260>
__________________ test_RequestIDFilter_filter_no_request_id __________________
tests\test_RequestIDFilter_filter.py:23: in test_RequestIDFilter_filter_no_request_id
    result = request_id_filter.filter(record)
backend\main.py:49: in filter
    record.request_id = request_id_ctx.get()
E   LookupError: <ContextVar name='request_id' at 0x00000248B255D260>
__________________ test_RequestIDMiddleware_dispatch_success __________________
tests\test_RequestIDMiddleware_dispatch.py:26: in test_RequestIDMiddleware_dispatch_success
    middleware = RequestIDMiddleware()
E   TypeError: BaseHTTPMiddleware.__init__() missing 1 required positional argument: 'app'
_________________ test_RequestIDMiddleware_dispatch_exception _________________
tests\test_RequestIDMiddleware_dispatch.py:51: in test_RequestIDMiddleware_dispatch_exception
    middleware = RequestIDMiddleware()
E   TypeError: BaseHTTPMiddleware.__init__() missing 1 required positional argument: 'app'
___________________ test_create_flashcard_empty_front_text ____________________
tests\test_create_flashcard.py:39: in test_create_flashcard_empty_front_text
    with pytest.raises(HTTPException) as exc_info:
E   Failed: DID NOT RAISE <class 'fastapi.exceptions.HTTPException'>
____________________ test_create_flashcard_empty_back_text ____________________
tests\test_create_flashcard.py:50: in test_create_flashcard_empty_back_text
    with pytest.raises(HTTPException) as exc_info:
E   Failed: DID NOT RAISE <class 'fastapi.exceptions.HTTPException'>
_________________________ test_create_review_success __________________________
tests\test_create_review.py:11: in test_create_review_success
    review_data = schemas.ReviewCreate(flashcard_id=1, rating=5, comment="Excellent!")
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for ReviewCreate
E   correct
E     Field required [type=missing, input_value={'flashcard_id': 1, 'rati...'comment': 'Excellent!'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
_________________________ test_create_review_db_error _________________________
tests\test_create_review.py:31: in test_create_review_db_error
    review_data = schemas.ReviewCreate(flashcard_id=1, rating=1, comment="Bad")
E   pydantic_core._pydantic_core.ValidationError: 1 validation error for ReviewCreate
E   correct
E     Field required [type=missing, input_value={'flashcard_id': 1, 'rating': 1, 'comment': 'Bad'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
______________________ test_create_review_invalid_input _______________________
tests\test_create_review.py:48: in test_create_review_invalid_input
    review_data = schemas.ReviewCreate(flashcard_id=None, rating=5, comment="Excellent!")  # flashcard_id is None which is invalid
E   pydantic_core._pydantic_core.ValidationError: 2 validation errors for ReviewCreate
E   flashcard_id
E     Input should be a valid integer [type=int_type, input_value=None, input_type=NoneType]
E       For further information visit https://errors.pydantic.dev/2.11/v/int_type
E   correct
E     Field required [type=missing, input_value={'flashcard_id': None, 'r...'comment': 'Excellent!'}, input_type=dict]
E       For further information visit https://errors.pydantic.dev/2.11/v/missing
________________________ test_create_flashcard_success ________________________
tests\test_integration.py:15: in test_create_flashcard_success
    assert response.status_code == 201
E   assert 405 == 201
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
__________________ test_create_flashcard_missing_front_text ___________________
tests\test_integration.py:25: in test_create_flashcard_missing_front_text
    assert response.status_code == 422
E   assert 405 == 422
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
___________________ test_create_flashcard_missing_back_text ___________________
tests\test_integration.py:32: in test_create_flashcard_missing_back_text
    assert response.status_code == 422
E   assert 405 == 422
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
__________________________ test_get_flashcards_empty __________________________
tests\test_integration.py:38: in test_get_flashcards_empty
    assert response.status_code == 200
E   assert 404 == 200
E    +  where 404 = <Response [404 Not Found]>.status_code
________________________ test_get_flashcards_with_data ________________________
tests\test_integration.py:47: in test_get_flashcards_with_data
    assert create_response.status_code == 201
E   assert 405 == 201
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
_______________________ test_get_flashcards_with_query ________________________
tests\test_integration.py:60: in test_get_flashcards_with_query
    assert create_response.status_code == 201
E   assert 405 == 201
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
______________________ test_get_flashcard_by_id_success _______________________
tests\test_integration.py:73: in test_get_flashcard_by_id_success
    assert create_response.status_code == 201
E   assert 405 == 201
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
_________________________ test_create_review_success __________________________
tests\test_integration.py:93: in test_create_review_success
    assert create_flashcard_response.status_code == 201
E   assert 405 == 201
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
___________________ test_create_review_invalid_flashcard_id ___________________
tests\test_integration.py:108: in test_create_review_invalid_flashcard_id
    assert review_response.status_code == 400
E   assert 405 == 400
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
___________________ test_create_review_missing_flashcard_id ___________________
tests\test_integration.py:115: in test_create_review_missing_flashcard_id
    assert review_response.status_code == 422
E   assert 405 == 422
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
_____________________ test_create_review_missing_correct ______________________
tests\test_integration.py:123: in test_create_review_missing_correct
    assert create_flashcard_response.status_code == 201
E   assert 405 == 201
E    +  where 405 = <Response [405 Method Not Allowed]>.status_code
_________________________ test_get_statistics_success _________________________
tests\test_integration.py:133: in test_get_statistics_success
    assert response.status_code == 200
E   assert 404 == 200
E    +  where 404 = <Response [404 Not Found]>.status_code
_________________________ test_read_flashcard_success _________________________
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:929: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47B4850>)
E   Actual: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47BEAA0>)

During handling of the above exception, another exception occurred:
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:941: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
E   AssertionError: expected call not found.
E   Expected: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47B4850>)
E   Actual: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47BEAA0>)
E   
E   pytest introspection follows:
E   
E   Args:
E   assert (<sqlalchemy....248B47BEAA0>,) == (<sqlalchemy....248B47B4850>,)
E     
E     At index 0 diff: <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47BEAA0> != <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47B4850>
E     
E     Full diff:
E       (
E     -     <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47B4850>,
E     ?                                                                       ^^^...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show

During handling of the above exception, another exception occurred:
tests\test_read_flashcard.py:20: in test_read_flashcard_success
    mock_db.query.return_value.filter.assert_called_once_with(models.Flashcard.id == flashcard_id)
E   AssertionError: expected call not found.
E   Expected: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47B4850>)
E   Actual: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47BEAA0>)
E   
E   pytest introspection follows:
E   
E   Args:
E   assert (<sqlalchemy....248B47BEAA0>,) == (<sqlalchemy....248B47B4850>,)
E     
E     At index 0 diff: <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47BEAA0> != <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47B4850>
E     
E     Full diff:
E       (
E     -     <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47B4850>,
E     ?                                                                       ^^^...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show
________________________ test_read_flashcard_not_found ________________________
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:929: in assert_called_with
    raise AssertionError(_error_message()) from cause
E   AssertionError: expected call not found.
E   Expected: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD6F0>)
E   Actual: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD810>)

During handling of the above exception, another exception occurred:
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:941: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
E   AssertionError: expected call not found.
E   Expected: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD6F0>)
E   Actual: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD810>)
E   
E   pytest introspection follows:
E   
E   Args:
E   assert (<sqlalchemy....248B47AD810>,) == (<sqlalchemy....248B47AD6F0>,)
E     
E     At index 0 diff: <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD810> != <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD6F0>
E     
E     Full diff:
E       (
E     -     <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD6F0>,
E     ?                                                                        ^^...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show

During handling of the above exception, another exception occurred:
tests\test_read_flashcard.py:36: in test_read_flashcard_not_found
    mock_db.query.return_value.filter.assert_called_once_with(models.Flashcard.id == flashcard_id)
E   AssertionError: expected call not found.
E   Expected: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD6F0>)
E   Actual: filter(<sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD810>)
E   
E   pytest introspection follows:
E   
E   Args:
E   assert (<sqlalchemy....248B47AD810>,) == (<sqlalchemy....248B47AD6F0>,)
E     
E     At index 0 diff: <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD810> != <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD6F0>
E     
E     Full diff:
E       (
E     -     <sqlalchemy.sql.elements.BinaryExpression object at 0x00000248B47AD6F0>,
E     ?                                                                        ^^...
E     
E     ...Full output truncated (3 lines hidden), use '-vv' to show
________________ test_read_flashcards_with_empty_query_success ________________
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:898: in assert_called
    raise AssertionError(msg)
E   AssertionError: Expected 'filter' to have been called.

During handling of the above exception, another exception occurred:
tests\test_read_flashcards.py:57: in test_read_flashcards_with_empty_query_success
    mock_db.query.return_value.filter.assert_called()
E   AssertionError: Expected 'filter' to have been called.
__________________ test_setup_logging_json_logger_available ___________________
tests\test_setup_logging.py:58: in test_setup_logging_json_logger_available
    mock_json_formatter = mocker.patch("backend.main.jsonlogger.JsonFormatter")
venv\lib\site-packages\pytest_mock\plugin.py:439: in __call__
    return self._start_patch(
venv\lib\site-packages\pytest_mock\plugin.py:257: in _start_patch
    mocked: MockType = p.start()
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1595: in start
    result = self.__enter__()
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1431: in __enter__
    self.target = self.getter()
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1618: in <lambda>
    getter = lambda: _importer(target)
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1261: in _importer
    thing = _dot_lookup(thing, comp, import_path)
..\..\..\..\..\AppData\Local\Programs\Python\Python310\lib\unittest\mock.py:1250: in _dot_lookup
    __import__(import_path)
E   ModuleNotFoundError: No module named 'backend.main.jsonlogger'; 'backend.main' is not a package
============================== warnings summary ===============================
venv\lib\site-packages\_pytest\config\__init__.py:1441
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\lib\site-packages\_pytest\config\__init__.py:1441: PytestConfigWarning: Unknown config option: cachedir
  
    self._warn_or_fail_if_strict(f"Unknown config option: {key}\n")

backend\database.py:16
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\backend\database.py:16: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

venv\lib\site-packages\pydantic\_internal\_config.py:323
venv\lib\site-packages\pydantic\_internal\_config.py:323
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\lib\site-packages\pydantic\_internal\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

venv\lib\site-packages\pydantic\_internal\_config.py:373
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\lib\site-packages\pydantic\_internal\_config.py:373: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/test_CustomJsonFormatter_format.py::test_CustomJsonFormatter_format_with_exception
FAILED tests/test_RequestIDFilter_filter.py::test_RequestIDFilter_filter_success
FAILED tests/test_RequestIDFilter_filter.py::test_RequestIDFilter_filter_no_request_id
FAILED tests/test_RequestIDMiddleware_dispatch.py::test_RequestIDMiddleware_dispatch_success
FAILED tests/test_RequestIDMiddleware_dispatch.py::test_RequestIDMiddleware_dispatch_exception
FAILED tests/test_create_flashcard.py::test_create_flashcard_empty_front_text
FAILED tests/test_create_flashcard.py::test_create_flashcard_empty_back_text
FAILED tests/test_create_review.py::test_create_review_success - pydantic_cor...
FAILED tests/test_create_review.py::test_create_review_db_error - pydantic_co...
FAILED tests/test_create_review.py::test_create_review_invalid_input - pydant...
FAILED tests/test_integration.py::test_create_flashcard_success - assert 405 ...
FAILED tests/test_integration.py::test_create_flashcard_missing_front_text - ...
FAILED tests/test_integration.py::test_create_flashcard_missing_back_text - a...
FAILED tests/test_integration.py::test_get_flashcards_empty - assert 404 == 200
FAILED tests/test_integration.py::test_get_flashcards_with_data - assert 405 ...
FAILED tests/test_integration.py::test_get_flashcards_with_query - assert 405...
FAILED tests/test_integration.py::test_get_flashcard_by_id_success - assert 4...
FAILED tests/test_integration.py::test_create_review_success - assert 405 == 201
FAILED tests/test_integration.py::test_create_review_invalid_flashcard_id - a...
FAILED tests/test_integration.py::test_create_review_missing_flashcard_id - a...
FAILED tests/test_integration.py::test_create_review_missing_correct - assert...
FAILED tests/test_integration.py::test_get_statistics_success - assert 404 ==...
FAILED tests/test_read_flashcard.py::test_read_flashcard_success - AssertionE...
FAILED tests/test_read_flashcard.py::test_read_flashcard_not_found - Assertio...
FAILED tests/test_read_flashcards.py::test_read_flashcards_with_empty_query_success
FAILED tests/test_setup_logging.py::test_setup_logging_json_logger_available
================== 26 failed, 21 passed, 5 warnings in 0.99s ==================


--- Failure Summary ---
Test: test_CustomJsonFormatter_format_with_exception
Source File: backend\main.py
Source Function: CustomJsonFormatter.format
Error Line: tests/test_CustomJsonFormatter_format.py::test_CustomJsonFormatter_format_with_exception FAILED [  6%]

Test: test_RequestIDFilter_filter_success
Source File: backend\main.py
Source Function: RequestIDFilter.filter
Error Line: tests/test_RequestIDFilter_filter.py::test_RequestIDFilter_filter_success FAILED [ 12%]

Test: test_RequestIDFilter_filter_no_request_id
Source File: backend\main.py
Source Function: RequestIDFilter.filter
Error Line: tests/test_RequestIDFilter_filter.py::test_RequestIDFilter_filter_no_request_id FAILED [ 14%]

Test: test_RequestIDMiddleware_dispatch_success
Source File: backend\main.py
Source Function: RequestIDMiddleware.dispatch
Error Line: tests/test_RequestIDMiddleware_dispatch.py::test_RequestIDMiddleware_dispatch_success FAILED [ 17%]

Test: test_RequestIDMiddleware_dispatch_exception
Source File: backend\main.py
Source Function: RequestIDMiddleware.dispatch
Error Line: tests/test_RequestIDMiddleware_dispatch.py::test_RequestIDMiddleware_dispatch_exception FAILED [ 19%]

Test: test_create_flashcard_empty_front_text
Source File: backend\routers\flashcards.py
Source Function: create_flashcard
Error Line: tests/test_create_flashcard.py::test_create_flashcard_empty_front_text FAILED [ 29%]

Test: test_create_flashcard_empty_back_text
Source File: backend\routers\flashcards.py
Source Function: create_flashcard
Error Line: tests/test_create_flashcard.py::test_create_flashcard_empty_back_text FAILED [ 31%]

Test: test_create_review_success
Source File: backend\routers\reviews.py
Source Function: create_review
Error Line: tests/test_create_review.py::test_create_review_success FAILED           [ 34%]

Test: test_create_review_db_error
Source File: backend\routers\reviews.py
Source Function: create_review
Error Line: tests/test_create_review.py::test_create_review_db_error FAILED          [ 36%]

Test: test_create_review_invalid_input
Source File: backend\routers\reviews.py
Source Function: create_review
Error Line: tests/test_create_review.py::test_create_review_invalid_input FAILED     [ 38%]

Test: test_create_flashcard_success
Source File: backend\main.py
Source Function: create_flashcard
Error Line: tests/test_integration.py::test_create_flashcard_success FAILED          [ 44%]

Test: test_create_flashcard_missing_front_text
Source File: backend\main.py
Source Function: create_flashcard
Error Line: tests/test_integration.py::test_create_flashcard_missing_front_text FAILED [ 46%]

Test: test_create_flashcard_missing_back_text
Source File: backend\main.py
Source Function: create_flashcard
Error Line: tests/test_integration.py::test_create_flashcard_missing_back_text FAILED [ 48%]

Test: test_get_flashcards_empty
Source File: backend\main.py
Source Function: get_flashcards
Error Line: tests/test_integration.py::test_get_flashcards_empty FAILED              [ 51%]

Test: test_get_flashcards_with_data
Source File: backend\main.py
Source Function: get_flashcards
Error Line: tests/test_integration.py::test_get_flashcards_with_data FAILED          [ 53%]

Test: test_get_flashcards_with_query
Source File: backend\main.py
Source Function: get_flashcards
Error Line: tests/test_integration.py::test_get_flashcards_with_query FAILED         [ 55%]

Test: test_get_flashcard_by_id_success
Source File: backend\main.py
Source Function: get_flashcard
Error Line: tests/test_integration.py::test_get_flashcard_by_id_success FAILED       [ 57%]

Test: test_create_review_success
Source File: backend\main.py
Source Function: create_review
Error Line: tests/test_integration.py::test_create_review_success FAILED             [ 61%]

Test: test_create_review_invalid_flashcard_id
Source File: backend\main.py
Source Function: create_review
Error Line: tests/test_integration.py::test_create_review_invalid_flashcard_id FAILED [ 63%]

Test: test_create_review_missing_flashcard_id
Source File: backend\main.py
Source Function: create_review
Error Line: tests/test_integration.py::test_create_review_missing_flashcard_id FAILED [ 65%]

Test: test_create_review_missing_correct
Source File: backend\main.py
Source Function: create_review
Error Line: tests/test_integration.py::test_create_review_missing_correct FAILED     [ 68%]

Test: test_get_statistics_success
Source File: backend\main.py
Source Function: get_statistics
Error Line: tests/test_integration.py::test_get_statistics_success FAILED            [ 70%]

Test: test_read_flashcard_success
Source File: backend\routers\flashcards.py
Source Function: read_flashcard
Error Line: tests/test_read_flashcard.py::test_read_flashcard_success FAILED         [ 78%]

Test: test_read_flashcard_not_found
Source File: backend\routers\flashcards.py
Source Function: read_flashcard
Error Line: tests/test_read_flashcard.py::test_read_flashcard_not_found FAILED       [ 80%]

Test: test_read_flashcards_with_empty_query_success
Source File: backend\routers\flashcards.py
Source Function: read_flashcards
Error Line: tests/test_read_flashcards.py::test_read_flashcards_with_empty_query_success FAILED [ 93%]

Test: test_setup_logging_json_logger_available
Source File: backend\main.py
Source Function: setup_logging
Error Line: tests/test_setup_logging.py::test_setup_logging_json_logger_available FAILED [100%]

