============================= test session starts =============================
platform win32 -- Python 3.10.10, pytest-8.3.5, pluggy-1.6.0 -- C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application
configfile: pytest.ini
plugins: anyio-4.9.0, asyncio-1.0.0, mock-3.14.1
asyncio: mode=auto, asyncio_default_fixture_loop_scope=function, asyncio_default_test_loop_scope=function
collecting ... collected 52 items

tests/integration/test_integration.py::test_health_check PASSED          [  1%]
tests/integration/test_integration.py::test_create_flashcard_success FAILED [  3%]

================================== FAILURES ===================================
________________________ test_create_flashcard_success ________________________

    def test_create_flashcard_success():
        # source_info: backend.routers.flashcards.create_flashcard
        payload = {
            "question": "What is the capital of France?",
            "answer": "Paris",
            "deck_name": "Geography"
        }
        response = client.post("/api/flashcards", json=payload)
>       assert response.status_code == 201
E       assert 405 == 201
E        +  where 405 = <Response [405 Method Not Allowed]>.status_code

tests\integration\test_integration.py:25: AssertionError
============================== warnings summary ===============================
venv\lib\site-packages\_pytest\config\__init__.py:1441
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\lib\site-packages\_pytest\config\__init__.py:1441: PytestConfigWarning: Unknown config option: cachedir
  
    self._warn_or_fail_if_strict(f"Unknown config option: {key}\n")

backend\database.py:16
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\backend\database.py:16: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)
    Base = declarative_base()

venv\lib\site-packages\pydantic\_internal\_config.py:323
venv\lib\site-packages\pydantic\_internal\_config.py:323
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\lib\site-packages\pydantic\_internal\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

venv\lib\site-packages\pydantic\_internal\_config.py:373
  C:\Users\Hoang Duy\Documents\Phan Lac Hung\autocode_assistant\code_generated_result\flashcard_web_application\venv\lib\site-packages\pydantic\_internal\_config.py:373: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/integration/test_integration.py::test_create_flashcard_success
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!
=================== 1 failed, 1 passed, 5 warnings in 0.86s ===================
